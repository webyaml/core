# filename: conf/docs/home.cfg
# path: /docs/home

############################################################
##
## Getting Started : Introduction
##
############################################################

view_name: &view_name "Getting Started: Introduction"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	<<: *docs_navbar

View: &view
	content:
		-
			<<: *div
			content:
				-
					<<: *h3
					class: page-header
					value: "Getting Started : Introduction"
				-
					<<: *p
					value: |
						WebYAML is a Rapid Application Development (RAD) tool that allows designers and developers to rapidly build attractive web applications and RESTful APIs for their projects.  Applications are authored as simple configuration files in YAML syntax.  
				-
					<<: *p
					value: |						
						WebYAML includes libraies of Elements, Processors and Templates for making webpages, user interfaces, and APIs.  WebYAML is Twitter Bootstrap ready, and includes many prebuilt elements, such as, headers, panels, tables, form fields and buttons.  Designers can easily add more elements without having to write any Python code. 
				-
					<<: *p
					value: |
						WebYAML also includes processors for basic functions, such as, connecting to data stores, handling data, business logic, sending emails, and saving files. Devlopers can create dynamic elements to add more functinality by extending the Element and Processor classes in Python.
				-
					<<: *p
					class: alert alert-info
					value: |
						<strong>Note:</strong> WebYAML makes heavy use of YAML syntax.  As a result most of the examples found in this documentation use YAML syntax.  YAML is designed to be human readable, and is similar to other serialized data such as JSON and Python data objects.  If you are not familiar with YAML, there are plenty of good references available.  Here is a good place to start: <a					 href="https://learnxinyminutes.com/docs/yaml/">https://learnxinyminutes.com/docs/yaml/</a>						
		-
			<<: *spacer
			height: 20
		-
			<<: *div
			width: 2
			offset: 2
			content:
				-
					<<: *p
					#value: "< Previous</br>"
					#class: "pull-right"
				-
					<<: *a
					#url: "/docs/intro/understanding"
					#class: "pull-right"
					#value: Installation			
		-
			<<: *div
			offset: 4
			width: 2
			content:
				-
					<<: *p
					value: "Next ></br>"
				-
					<<: *a
					url: "/docs/gettingstarted/filestructure"
					class: 
					value: File Structure
		-
			<<: *spacer
			height: 20					

include conf/docs/template.cfg