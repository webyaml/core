#cache #this file can only be included once

HTML GRID:
	-
		grid: &grid
			id: grid
			conf:
				#data: '{{json(inventory)}}'
				show: 6
				showoptions:
					- 6
					- 9
					- 12
					- 24
					- 48
					- 96
				search: true
				template: |
					<div class="col-sm-6 col-md-4 " >
						<img src="http://via.placeholder.com/450x300" class="thumbnail img-responsive" style="margin-bottom: 6px;">
						<h5 style="min-height: 30px;"><strong>[[year]] [[make]] [[model]]</strong></h5>
						<p class="col-xs-8 row">
							<strong>[[retailprice]]</strong> /mo</br>
							<strong>[[requiredDown]]</strong> down
						</p>
					</div>
				# style="height: 260px;"
				#		<p class="col-xs-4 pull-right">
				#			<a class=" btn btn-success btn-sm">Buy Now</a>
				#		</p>

			# Note 'wrap' is part of the content element, tempalte is part of 'conf'
			# style="padding-bottom: 5px;"
			wrap: |
				<div>
					<div id="{{id}}-search" class="col-md-6 form-inline"></div>
					<div id="{{id}}-show" class="col-md-6 form-inline text-right"></div>
				</div>
				<div style="margin-bottom: 160px;"></div>
				<div id="{{id}}-grid" class="col-md-12"></div>
				
				<div class="">						
					<div class="col-md-8 pull-right text-right">
						<nav aria-label="Page navigation">
							<ul class="pagination" id="{{id}}-pagination">
							</ul>
						</nav>
					</div>
					<div class="col-md-4 pull-left">
						<div id="{{id}}-counts" style="padding-bottom: 5px;"></div>
						
					</div>
				</div>

				<div class="row" id="{{id}}-filter"></div>
				|
				<script>
					
					// Grid display simailar to Datatables
				
					// Vars
					var conf={{json(conf)}}					
					conf["data"] = eval(conf["data"])
					
					var data= []
					var no_of_records = conf["data"].length
					var page=1							
					var search_keyword=""
					var expressions = []
					
					// Do we show some or all records on a page
					if ("show" in conf && conf["show"]) {
						var show=conf["show"]
					} else {
						var show=no_of_records
					}
					
					// Custom Script
					{{script}}
					
					
					// Search
					
					if ("search" in conf && conf["search"]) {
						
						search_content = 'Search <input id="{{id}}-search-input" class="form-control input-sm" value="'+search_keyword+'" onInput="changeSearch()">'
						
						
						$('#{{id}}-search').html(search_content)
						
					}
					
					// Filter
					
					if ("filter" in conf && conf["filter"]) {
					
						var filter_content = ''
						for (i in conf['filter']) {
						
							if (!conf["filter"][i]["match"]) {
								filter_content += '<div>'+conf["filter"][i]["label"]+'</div>'
								continue
							}
							
							filter_content += '<div><input id="{{id}}-filter-'+i+'" type="checkbox" onChange="changeFilter()" checked> '+conf["filter"][i]["label"]+'</div>'
							
						}
					
						$('#{{id}}-filter').html(filter_content)
					}						
					

					// Functions
					
					function updateExpressions() {
						
						expressions = []
						var i = 0
						for (i in conf['filter']) {
						
							if ("match" in conf["filter"][i]) {
							
								if ($('#{{id}}-filter-'+i).is(":checked")) {
									expressions.push.apply(expressions, conf["filter"][i]["match"])
								}
							}
						}							
					}							
					
					
					function search(record) {
					
						var i = 0
						for (i in record) {
							if (String(record[i]).toLowerCase().includes(String(search_keyword).toLowerCase())) {
								return true
							}
						}
						return false
					}
					
					
					function filter(record) {							

						var i  = 0
						for (i in expressions) {									
							if (record[expressions[i]['field']] != expressions[i]['value']) {
								return false
							}
						}
						return true
					}
					

					function display() {
					
						// Filter and Search Records
						
						// Update the list of expressions
						updateExpressions()
						
						// Loop over each record
						var data = []
						var i = 0
						for (i in conf["data"]) {

							// Filter
							if (expressions) {
								if (!filter(conf["data"][i])) {
									continue
								}
							}

							// Search
							if (search_keyword !='') {
								if (!search(conf["data"][i])) {
									continue
								}
							}
							
							// Record passed tests
							data.push(conf["data"][i])
						}
						

						// Update record count
						no_of_records = data.length
						
						
						// Display Grid
						
						var output='';
						var offset=show * (page - 1)
						
						for (i = 0; i < show; i++) { 
						
							//console.log(data[i+offset])
						
						
							if (data[i+offset]) {
						
								var tmp_template = conf["template"]
								for (item in data[i+offset]) {
									tmp_template = tmp_template.replace("[["+item+"]]", data[i+offset][item]);
								}
								output += tmp_template;
							
							}
							
						}
						
						$('#{{id}}-grid').html(output); // draw
						
						
						if ("show" in conf && conf["show"]) {
						
							// Pagination
						
							var pagination = '';
							
							// Previous Button
							if (page == 1) {
								pagination += '<li class="disabled"><a>Previous</a></li>'
							} else {
								pagination += '<li><a onClick="changePage('+(page - 1)+')">Previous</a></li>'
							}
							
							// Show all pages if the page count is less that 7
							if (Math.ceil(data.length / show) <= 7) {

								for (i = 0; i < Math.ceil(data.length / show); i++) {
									
									pagination += '<li'
									if (page == i + 1) {
										pagination += ' class="active"'
									}
									pagination += '><a onClick="changePage('+(i + 1)+')">'+(i + 1)+'</a></li>'
								
								}
								
							// there are more than 7 pages
							} else {
							
								// if the curent page is less that 4
								if (page <= 4) {

									// show first 5 pages
									for (i = 0; i < 5; i++) {
										
										pagination += '<li'
										if (page == i + 1) {
											pagination += ' class="active"'
										}
										pagination += '><a onClick="changePage('+(i + 1)+')">'+(i + 1)+'</a></li>'
									
									}
								// show some dots and the last page	
								pagination += '<li class="disabled"><a>...</a></li>'
								pagination += '<li><a onClick="changePage('+Math.ceil(data.length / show)+')">'+Math.ceil(data.length / show)+'</a></li>'
								
								}
								
								if (page > 4) {
								
									if (page < Math.ceil(data.length / show) - 3) {

										pagination += '<li><a onClick="changePage(1)">1</a></li>'
										pagination += '<li class="disabled"><a>...</a></li>'
										
										pagination += '<li><a onClick="changePage('+(page - 1)+')">'+(page - 1)+'</a></li>'
										pagination += '<li class="active"><a onClick="changePage('+page+')">'+page+'</a></li>'
										pagination += '<li><a onClick="changePage('+(page + 1)+')">'+(page + 1)+'</a></li>'
										pagination += '<li class="disabled"><a>...</a></li>'
										pagination += '<li><a onClick="changePage('+Math.ceil(data.length / show)+')">'+Math.ceil(data.length / show)+'</a></li>'
									
									} else {

										pagination += '<li><a onClick="changePage(1)">1</a></li>'
										pagination += '<li class="disabled"><a>...</a></li>'
										
										for (i = 4; i >= 0; i--) {
										
											pagination += '<li'
											if (page == Math.ceil(data.length / show - i)) {
												pagination += ' class="active"'
											}
											pagination += '><a onClick="changePage('+(Math.ceil(data.length / show) - i)+')">'+(Math.ceil(data.length / show) - i)+'</a></li>'
										}
									}
								}									
							}
							
							// Next Button
							if (page < Math.ceil(data.length / show)) {
								pagination += '<li><a onClick="changePage('+(page + 1)+')">Next</a></li>';
							} else {
								pagination += '<li class="disabled"><a>Next</a></li>';
							}
							
							// update pagination
							$('#{{id}}-pagination').html(pagination);

						
							// Show Options
						
							from = offset+1
							to = offset + show
						
							if (no_of_records < to) {
								to = no_of_records
							}
						
							$('#{{id}}-counts').text("Showing records "+from+" to "+to+" of "+no_of_records+".")

							// Show Options
							
							options = ''
							if (conf['showoptions']) {
							
								options += 'Show <select id="{{id}}-showoptions" class="form-control input-sm" onChange="changeShow()">'
								
								for (i in conf['showoptions']) {
									options += '<option value="'+conf['showoptions'][i]+'"'
									
									if (conf['showoptions'][i] == show) {
										options += " selected"
									}
									
									options += '>'+conf['showoptions'][i]+'</option>'
								}
								options += "</select> per page"
							
								// update options
								$('#{{id}}-show').html(options);								
							
							}
						
						}								
					
					}

					function changePage(newpage) {
						page=newpage;
						display();
					}
					
					function changeShow() {
					
						show = parseInt($('#{{id}}-showoptions').val())
						page = 1
						display();
					}
					
					function changeSearch() {
						
						search_keyword = $('#{{id}}-search-input').val()
						
						// update global vars
						page = 1

						// update the display for the new serach
						display()
					}

					function changeFilter() {
					
						// update global vars
						page = 1							
					
						display()
					}


					
					// Display
					display()

				</script>
